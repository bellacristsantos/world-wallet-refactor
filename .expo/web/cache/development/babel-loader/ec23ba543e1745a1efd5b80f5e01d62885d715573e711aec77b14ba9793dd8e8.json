{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport { VStack, Image, Text, Button, Pressable, HStack } from 'native-base';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport BackgroundDateImg from \"../assets/DateScreenImg.png\";\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function DateSelection(_ref) {\n  var _route$params;\n  var route = _ref.route;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    showDatePicker = _useState2[0],\n    setShowDatePicker = _useState2[1];\n  var _useState3 = useState(new Date()),\n    _useState4 = _slicedToArray(_useState3, 2),\n    selectedDate = _useState4[0],\n    setSelectedDate = _useState4[1];\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    selectedDates = _useState6[0],\n    setSelectedDates = _useState6[1];\n  var _useState7 = useState(new Date()),\n    _useState8 = _slicedToArray(_useState7, 2),\n    today = _useState8[0],\n    setToday = _useState8[1];\n  var navigation = useNavigation();\n  var selectedLocation = ((_route$params = route.params) == null ? void 0 : _route$params.selectedLocation) || null;\n  var onChangeDate = function onChangeDate(_event, selected) {\n    if (_event.type === 'set' && selected) {\n      setSelectedDate(selected);\n    }\n    setShowDatePicker(false);\n  };\n  var saveSelectedDate = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      setSelectedDates([].concat(_toConsumableArray(selectedDates), [selectedDate]));\n      setSelectedDate(new Date());\n    });\n    return function saveSelectedDate() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var exploreEvents = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      try {\n        yield AsyncStorage.setItem('selectedDates', JSON.stringify(selectedDates));\n        navigation.navigate('events_feed', {\n          selectedDates: selectedDates,\n          selectedLocation: selectedLocation\n        });\n      } catch (error) {\n        console.error(error);\n      }\n    });\n    return function exploreEvents() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var isDateSelected = function isDateSelected(date) {\n    return selectedDates.some(function (selected) {\n      return selected.toDateString() === date.toDateString();\n    });\n  };\n  return _jsxs(VStack, {\n    flex: 1,\n    bg: \"gray.700\",\n    px: 22,\n    children: [_jsx(Image, {\n      source: BackgroundDateImg,\n      alt: \"Music Event Image\",\n      maxW: 428,\n      maxH: 624,\n      resizeMode: \"cover\",\n      position: \"absolute\"\n    }), showDatePicker && _jsx(DateTimePicker, {\n      value: selectedDate,\n      mode: \"date\",\n      display: \"default\",\n      onChange: onChangeDate\n    }), _jsx(HStack, {\n      flex: 1,\n      space: 2,\n      marginTop: 412,\n      justifyContent: \"center\",\n      children: _jsx(Button, {\n        onPress: function onPress() {\n          return setShowDatePicker(true);\n        },\n        bg: \"transparent\",\n        borderRadius: 6,\n        borderWidth: 1,\n        borderColor: \"purple.500\",\n        width: 180,\n        height: 42,\n        children: _jsx(Text, {\n          color: \"gray.100\",\n          children: \"Choose Event Date\"\n        })\n      })\n    }), _jsx(Pressable, {\n      children: _jsx(LinearGradient, {\n        colors: ['#6D50A0', '#E983F7', '#EC84F9', '#F687FF'],\n        locations: [0, 0.85, 0.5, 1],\n        start: [0, 0],\n        end: [1, 0],\n        style: {\n          borderRadius: 8,\n          overflow: 'hidden'\n        },\n        marginBottom: 42,\n        children: _jsx(Button, {\n          onPress: exploreEvents,\n          variant: \"unstyled\",\n          children: _jsx(Text, {\n            color: \"gray.100\",\n            fontSize: \"md\",\n            children: \"Explore Events\"\n          })\n        })\n      })\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","VStack","Image","Text","Button","Pressable","HStack","LinearGradient","DateTimePicker","AsyncStorage","BackgroundDateImg","useNavigation","jsx","_jsx","jsxs","_jsxs","DateSelection","_ref","_route$params","route","_useState","_useState2","_slicedToArray","showDatePicker","setShowDatePicker","_useState3","Date","_useState4","selectedDate","setSelectedDate","_useState5","_useState6","selectedDates","setSelectedDates","_useState7","_useState8","today","setToday","navigation","selectedLocation","params","onChangeDate","_event","selected","type","saveSelectedDate","_ref2","_asyncToGenerator","concat","_toConsumableArray","apply","arguments","exploreEvents","_ref3","setItem","JSON","stringify","navigate","error","console","isDateSelected","date","some","toDateString","flex","bg","px","children","source","alt","maxW","maxH","resizeMode","position","value","mode","display","onChange","space","marginTop","justifyContent","onPress","borderRadius","borderWidth","borderColor","width","height","color","colors","locations","start","end","style","overflow","marginBottom","variant","fontSize"],"sources":["/Users/bellacristsantos/Downloads/codeworks/luster/luster/src/screens/DateSelection.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { VStack, Image, Text, Button, Pressable, Center, Box, HStack } from 'native-base';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport BackgroundDateImg from '@assets/DateScreenImg.png';\nimport { useNavigation } from '@react-navigation/native';\n\nexport function DateSelection({ route }) {\n  const [showDatePicker, setShowDatePicker] = useState(false);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [selectedDates, setSelectedDates] = useState([]);\n  const [today, setToday] = useState(new Date());\n  const navigation = useNavigation();\n\n  const selectedLocation = route.params?.selectedLocation || null;\n\n  const onChangeDate = (_event, selected) => {\n    if (_event.type === 'set' && selected) {\n      setSelectedDate(selected);\n    }\n    setShowDatePicker(false);\n  };\n\n  const saveSelectedDate = async () => {\n    setSelectedDates([...selectedDates, selectedDate]);\n    setSelectedDate(new Date());\n  };\n\n  const exploreEvents = async () => {\n    try {\n      await AsyncStorage.setItem('selectedDates', JSON.stringify(selectedDates));\n      navigation.navigate('events_feed', { selectedDates, selectedLocation });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const isDateSelected = (date) => {\n    return selectedDates.some((selected) => selected.toDateString() === date.toDateString());\n  };\n\n  return (\n    <VStack flex={1} bg=\"gray.700\" px={22}>\n\n      <Image source={BackgroundDateImg} alt=\"Music Event Image\" maxW={428} maxH={624} resizeMode=\"cover\" position=\"absolute\" />\n\n      {showDatePicker && <DateTimePicker value={selectedDate} mode=\"date\" display=\"default\" onChange={onChangeDate} />}\n\n        <HStack flex={1} space={2} marginTop={412} justifyContent='center'>\n\n          <Button\n                  onPress={() => setShowDatePicker(true)}\n                  bg=\"transparent\"\n                  borderRadius={6}\n                  borderWidth={1}\n                  borderColor=\"purple.500\"\n                  width={180}\n                  height={42}\n                >\n                  <Text color=\"gray.100\">Choose Event Date</Text>\n          </Button>\n        </HStack>\n\n\n\n      <Pressable>\n        <LinearGradient\n        colors={['#6D50A0', '#E983F7', '#EC84F9', '#F687FF']}\n        locations={[0, 0.85, 0.5, 1]}\n        start={[0, 0]}\n        end={[1, 0]}\n        style={{ borderRadius: 8, overflow: 'hidden'}}\n        marginBottom={42}\n        >\n\n          <Button\n          onPress={exploreEvents}\n          variant=\"unstyled\"\n\n           >\n            <Text color=\"gray.100\" fontSize=\"md\">\n              Explore Events\n            </Text>\n          </Button>\n        </LinearGradient>\n      </Pressable>\n    </VStack>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}