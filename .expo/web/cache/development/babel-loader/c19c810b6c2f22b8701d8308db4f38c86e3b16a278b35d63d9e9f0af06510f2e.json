{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport axios from 'axios';\nvar clientId = '1b20b1dfe30a45b28f8830821751d9de';\nvar clientSecret = 's2105836d21f74739b693dc4d7cb147d6';\nvar redirectUri = 'http://localhost:3000';\nvar accessToken = null;\nvar refreshToken = null;\nvar expirationTime = null;\nfunction getAccessToken() {\n  return _getAccessToken.apply(this, arguments);\n}\nfunction _getAccessToken() {\n  _getAccessToken = _asyncToGenerator(function* () {\n    if (!accessToken || expirationTime <= new Date()) {\n      try {\n        var response = yield axios.post('https://accounts.spotify.com/api/token', `grant_type=client_credentials&${redirectUri}client_id=${clientId}&client_secret=${clientSecret}`, {\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded'\n          }\n        });\n        accessToken = response.data.access_token;\n        var expiresIn = response.data.expires_in;\n        expirationTime = new Date(Date.now() + expiresIn * 1000);\n        return accessToken;\n      } catch (error) {\n        console.error(error);\n        throw error;\n      }\n    } else {\n      return accessToken;\n    }\n  });\n  return _getAccessToken.apply(this, arguments);\n}\nfunction renewAccessToken(_x) {\n  return _renewAccessToken.apply(this, arguments);\n}\nfunction _renewAccessToken() {\n  _renewAccessToken = _asyncToGenerator(function* (refreshToken) {\n    try {\n      var response = yield axios.post('https://accounts.spotify.com/api/token', `grant_type=refresh_token&refresh_token=${refreshToken}`, {\n        headers: {\n          Authorization: `Basic ${Buffer.from(`${clientId}:${clientSecret}`).toString('base64')}`,\n          'Content-Type': 'application/x-www-form-urlencoded'\n        }\n      });\n      accessToken = response.data.access_token;\n      var expiresIn = response.data.expires_in;\n      expirationTime = new Date(Date.now() + expiresIn * 1000);\n      return accessToken;\n    } catch (error) {\n      console.error(error);\n      throw error;\n    }\n  });\n  return _renewAccessToken.apply(this, arguments);\n}\nexport function getTopArtists() {\n  return _getTopArtists.apply(this, arguments);\n}\nfunction _getTopArtists() {\n  _getTopArtists = _asyncToGenerator(function* () {\n    try {\n      var _accessToken = yield getAccessToken();\n      var response = yield axios.get('https://api.spotify.com/v1/me/top/artists', {\n        headers: {\n          Authorization: `Bearer ${_accessToken}`\n        },\n        params: {\n          limit: 10\n        }\n      });\n      var topArtists = response.data.items.map(function (artist) {\n        return {\n          name: artist.name,\n          image: artist.images.length > 0 ? artist.images[0].url : null\n        };\n      });\n      return topArtists;\n    } catch (error) {\n      console.error('Erro ao obter dados de artistas:', error);\n      console.error(error);\n      throw error;\n    }\n  });\n  return _getTopArtists.apply(this, arguments);\n}","map":{"version":3,"names":["axios","clientId","clientSecret","redirectUri","accessToken","refreshToken","expirationTime","getAccessToken","_getAccessToken","apply","arguments","_asyncToGenerator","Date","response","post","headers","data","access_token","expiresIn","expires_in","now","error","console","renewAccessToken","_x","_renewAccessToken","Authorization","Buffer","from","toString","getTopArtists","_getTopArtists","get","params","limit","topArtists","items","map","artist","name","image","images","length","url"],"sources":["/Users/bellacristsantos/Downloads/codeworks/luster/luster/src/services/spotifyService.js"],"sourcesContent":["import axios from 'axios';\n\nconst clientId = '1b20b1dfe30a45b28f8830821751d9de';\nconst clientSecret = 's2105836d21f74739b693dc4d7cb147d6';\nconst redirectUri = 'http://localhost:3000';\n\nlet accessToken = null;\nlet refreshToken = null;\nlet expirationTime = null;\n\nasync function getAccessToken() {\n  if (!accessToken || expirationTime <= new Date()) {\n    try {\n      const response = await axios.post(\n        'https://accounts.spotify.com/api/token',\n        `grant_type=client_credentials&${redirectUri}client_id=${clientId}&client_secret=${clientSecret}`,\n        {\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded',\n          },\n        }\n      );\n\n      accessToken = response.data.access_token;\n      const expiresIn = response.data.expires_in;\n      expirationTime = new Date(Date.now() + expiresIn * 1000);\n\n      return accessToken;\n    } catch (error) {\n      console.error(error);\n      throw error;\n    }\n  } else {\n    return accessToken;\n  }\n}\n\nasync function renewAccessToken(refreshToken) {\n  try {\n    const response = await axios.post(\n      'https://accounts.spotify.com/api/token',\n      `grant_type=refresh_token&refresh_token=${refreshToken}`,\n      {\n        headers: {\n          Authorization: `Basic ${Buffer.from(`${clientId}:${clientSecret}`).toString('base64')}`,\n          'Content-Type': 'application/x-www-form-urlencoded',\n        },\n      }\n    );\n\n    accessToken = response.data.access_token;\n    const expiresIn = response.data.expires_in;\n    expirationTime = new Date(Date.now() + expiresIn * 1000);\n\n    return accessToken;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n}\n\nexport async function getTopArtists() {\n  try {\n    const accessToken = await getAccessToken();\n\n    const response = await axios.get('https://api.spotify.com/v1/me/top/artists', {\n      headers: {\n        Authorization: `Bearer ${accessToken}`,\n      },\n      params: {\n        limit: 10,\n      },\n    });\n\n    const topArtists = response.data.items.map(artist => ({\n      name: artist.name,\n      image: artist.images.length > 0 ? artist.images[0].url : null,\n    }));\n\n    return topArtists;\n  } catch (error) {\n    console.error('Erro ao obter dados de artistas:', error);\n\n    console.error(error);\n    throw error;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}