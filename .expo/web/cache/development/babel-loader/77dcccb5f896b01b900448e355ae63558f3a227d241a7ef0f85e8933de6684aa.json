{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { useOverlayTriggerState as $9Xvoh$useOverlayTriggerState } from \"@react-stately/overlays\";\nimport { useState as $9Xvoh$useState, useMemo as $9Xvoh$useMemo, useCallback as $9Xvoh$useCallback } from \"react\";\nfunction $a28c903ee9ad8dc5$export$79fefeb1c2091ac3(props) {\n  var overlayTriggerState = (0, $9Xvoh$useOverlayTriggerState)(props);\n  var _ref = (0, $9Xvoh$useState)(null),\n    _ref2 = _slicedToArray(_ref, 2),\n    focusStrategy = _ref2[0],\n    setFocusStrategy = _ref2[1];\n  var _ref3 = (0, $9Xvoh$useState)([]),\n    _ref4 = _slicedToArray(_ref3, 2),\n    expandedKeysStack = _ref4[0],\n    setExpandedKeysStack = _ref4[1];\n  var closeAll = function closeAll() {\n    setExpandedKeysStack([]);\n    overlayTriggerState.close();\n  };\n  var openSubmenu = function openSubmenu(triggerKey, level) {\n    setExpandedKeysStack(function (oldStack) {\n      if (level > oldStack.length) return oldStack;\n      return [].concat(_toConsumableArray(oldStack.slice(0, level)), [triggerKey]);\n    });\n  };\n  var closeSubmenu = function closeSubmenu(triggerKey, level) {\n    setExpandedKeysStack(function (oldStack) {\n      var key = oldStack[level];\n      if (key === triggerKey) return oldStack.slice(0, level);else return oldStack;\n    });\n  };\n  return _objectSpread(_objectSpread({\n    focusStrategy: focusStrategy\n  }, overlayTriggerState), {}, {\n    open: function open() {\n      var focusStrategy = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      setFocusStrategy(focusStrategy);\n      overlayTriggerState.open();\n    },\n    toggle: function toggle() {\n      var focusStrategy = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      setFocusStrategy(focusStrategy);\n      overlayTriggerState.toggle();\n    },\n    close: function close() {\n      closeAll();\n    },\n    UNSTABLE_expandedKeysStack: expandedKeysStack,\n    UNSTABLE_openSubmenu: openSubmenu,\n    UNSTABLE_closeSubmenu: closeSubmenu\n  });\n}\nfunction $e5614764aa47eb35$export$d39fdbfa42246ac4(props, state) {\n  var triggerKey = props.triggerKey;\n  var UNSTABLE_expandedKeysStack = state.UNSTABLE_expandedKeysStack,\n    UNSTABLE_openSubmenu = state.UNSTABLE_openSubmenu,\n    UNSTABLE_closeSubmenu = state.UNSTABLE_closeSubmenu,\n    closeAll = state.close;\n  var _ref5 = (0, $9Xvoh$useState)(UNSTABLE_expandedKeysStack === null || UNSTABLE_expandedKeysStack === void 0 ? void 0 : UNSTABLE_expandedKeysStack.length),\n    _ref6 = _slicedToArray(_ref5, 1),\n    submenuLevel = _ref6[0];\n  var isOpen = (0, $9Xvoh$useMemo)(function () {\n    return UNSTABLE_expandedKeysStack[submenuLevel] === triggerKey;\n  }, [UNSTABLE_expandedKeysStack, triggerKey, submenuLevel]);\n  var _ref7 = (0, $9Xvoh$useState)(null),\n    _ref8 = _slicedToArray(_ref7, 2),\n    focusStrategy = _ref8[0],\n    setFocusStrategy = _ref8[1];\n  var open = (0, $9Xvoh$useCallback)(function () {\n    var focusStrategy = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    setFocusStrategy(focusStrategy);\n    UNSTABLE_openSubmenu(triggerKey, submenuLevel);\n  }, [UNSTABLE_openSubmenu, submenuLevel, triggerKey]);\n  var close = (0, $9Xvoh$useCallback)(function () {\n    setFocusStrategy(null);\n    UNSTABLE_closeSubmenu(triggerKey, submenuLevel);\n  }, [UNSTABLE_closeSubmenu, submenuLevel, triggerKey]);\n  var toggle = (0, $9Xvoh$useCallback)(function () {\n    var focusStrategy = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    setFocusStrategy(focusStrategy);\n    if (isOpen) close();else open(focusStrategy);\n  }, [close, open, isOpen]);\n  return (0, $9Xvoh$useMemo)(function () {\n    return {\n      focusStrategy: focusStrategy,\n      isOpen: isOpen,\n      open: open,\n      close: close,\n      closeAll: closeAll,\n      submenuLevel: submenuLevel,\n      setOpen: function setOpen() {},\n      toggle: toggle\n    };\n  }, [isOpen, open, close, closeAll, focusStrategy, toggle, submenuLevel]);\n}\nexport { $a28c903ee9ad8dc5$export$79fefeb1c2091ac3 as useMenuTriggerState, $e5614764aa47eb35$export$d39fdbfa42246ac4 as UNSTABLE_useSubmenuTriggerState };","map":{"version":3,"names":["$a28c903ee9ad8dc5$export$79fefeb1c2091ac3","props","overlayTriggerState","$9Xvoh$useOverlayTriggerState","_ref","$9Xvoh$useState","_ref2","_slicedToArray","focusStrategy","setFocusStrategy","_ref3","_ref4","expandedKeysStack","setExpandedKeysStack","closeAll","close","openSubmenu","triggerKey","level","oldStack","length","concat","_toConsumableArray","slice","closeSubmenu","key","_objectSpread","open","arguments","undefined","toggle","UNSTABLE_expandedKeysStack","UNSTABLE_openSubmenu","UNSTABLE_closeSubmenu","$e5614764aa47eb35$export$d39fdbfa42246ac4","state","_ref5","_ref6","submenuLevel","isOpen","$9Xvoh$useMemo","_ref7","_ref8","$9Xvoh$useCallback","setOpen"],"sources":["/Users/bellacristsantos/Downloads/codeworks/luster/luster/node_modules/@react-stately/menu/dist/packages/@react-stately/menu/src/index.ts","/Users/bellacristsantos/Downloads/codeworks/luster/luster/node_modules/@react-stately/menu/dist/packages/@react-stately/menu/src/useMenuTriggerState.ts","/Users/bellacristsantos/Downloads/codeworks/luster/luster/node_modules/@react-stately/menu/dist/packages/@react-stately/menu/src/useSubmenuTriggerState.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nexport {useMenuTriggerState} from './useMenuTriggerState';\nexport {UNSTABLE_useSubmenuTriggerState} from './useSubmenuTriggerState';\n\nexport type {MenuTriggerProps} from '@react-types/menu';\nexport type {MenuTriggerState, RootMenuTriggerState} from './useMenuTriggerState';\nexport type {SubmenuTriggerProps, SubmenuTriggerState} from './useSubmenuTriggerState';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {FocusStrategy, Key} from '@react-types/shared';\nimport {MenuTriggerProps} from '@react-types/menu';\nimport {OverlayTriggerState, useOverlayTriggerState} from '@react-stately/overlays';\nimport {useState} from 'react';\n\nexport interface MenuTriggerState extends OverlayTriggerState {\n  /** Controls which item will be auto focused when the menu opens. */\n  readonly focusStrategy: FocusStrategy,\n\n  /** Opens the menu. */\n  open(focusStrategy?: FocusStrategy | null): void,\n\n  /** Toggles the menu. */\n  toggle(focusStrategy?: FocusStrategy | null): void\n}\n\nexport interface RootMenuTriggerState extends MenuTriggerState {\n  /** Opens a specific submenu tied to a specific menu item at a specific level. */\n  UNSTABLE_openSubmenu: (triggerKey: Key, level: number) => void,\n\n  /** Closes a specific submenu tied to a specific menu item at a specific level. */\n  UNSTABLE_closeSubmenu: (triggerKey: Key, level: number) => void,\n\n  /** An array of open submenu trigger keys within the menu tree.\n   * The index of key within array matches the submenu level in the tree.\n   */\n  UNSTABLE_expandedKeysStack: Key[],\n\n  /** Closes the menu and all submenus in the menu tree. */\n  close: () => void\n}\n\n/**\n * Manages state for a menu trigger. Tracks whether the menu is currently open,\n * and controls which item will receive focus when it opens. Also tracks the open submenus within\n * the menu tree via their trigger keys.\n */\nexport function useMenuTriggerState(props: MenuTriggerProps): RootMenuTriggerState  {\n  let overlayTriggerState = useOverlayTriggerState(props);\n  let [focusStrategy, setFocusStrategy] = useState<FocusStrategy>(null);\n  let [expandedKeysStack, setExpandedKeysStack] = useState<Key[]>([]);\n\n  let closeAll = () => {\n    setExpandedKeysStack([]);\n    overlayTriggerState.close();\n  };\n\n  let openSubmenu = (triggerKey: Key, level: number) => {\n    setExpandedKeysStack(oldStack => {\n      if (level > oldStack.length) {\n        return oldStack;\n      }\n\n      return [...oldStack.slice(0, level), triggerKey];\n    });\n  };\n\n  let closeSubmenu = (triggerKey: Key, level: number) => {\n    setExpandedKeysStack(oldStack => {\n      let key = oldStack[level];\n      if (key === triggerKey) {\n        return oldStack.slice(0, level);\n      } else {\n        return oldStack;\n      }\n    });\n  };\n\n  return {\n    focusStrategy,\n    ...overlayTriggerState,\n    open(focusStrategy: FocusStrategy = null) {\n      setFocusStrategy(focusStrategy);\n      overlayTriggerState.open();\n    },\n    toggle(focusStrategy: FocusStrategy = null) {\n      setFocusStrategy(focusStrategy);\n      overlayTriggerState.toggle();\n    },\n    close() {\n      closeAll();\n    },\n    UNSTABLE_expandedKeysStack: expandedKeysStack,\n    UNSTABLE_openSubmenu: openSubmenu,\n    UNSTABLE_closeSubmenu: closeSubmenu\n  };\n}\n","/*\n * Copyright 2023 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {FocusStrategy, Key} from '@react-types/shared';\nimport type {OverlayTriggerState} from '@react-stately/overlays';\nimport {RootMenuTriggerState} from './useMenuTriggerState';\nimport {useCallback, useMemo, useState} from 'react';\n\nexport interface SubmenuTriggerProps {\n  /** Key of the trigger item. */\n  triggerKey: Key\n}\n\nexport interface SubmenuTriggerState extends OverlayTriggerState {\n  /** Whether the submenu is currently open. */\n  isOpen: boolean,\n  /** Controls which item will be auto focused when the submenu opens. */\n  focusStrategy: FocusStrategy | null,\n  /** Opens the submenu. */\n  open: (focusStrategy?: FocusStrategy | null) => void,\n  /** Closes the submenu. */\n  close: () => void,\n  /** Closes all menus and submenus in the menu tree. */\n  closeAll: () => void,\n  /** The level of the submenu. */\n  submenuLevel: number,\n  /** Toggles the submenu. */\n  toggle: (focusStrategy?: FocusStrategy | null) => void,\n  /** @private */\n  setOpen: () => void\n}\n\n/**\n * Manages state for a submenu trigger. Tracks whether the submenu is currently open, the level of the submenu, and\n * controls which item will receive focus when it opens.\n */\nexport function UNSTABLE_useSubmenuTriggerState(props: SubmenuTriggerProps, state: RootMenuTriggerState): SubmenuTriggerState  {\n  let {triggerKey} = props;\n  let {UNSTABLE_expandedKeysStack, UNSTABLE_openSubmenu, UNSTABLE_closeSubmenu, close: closeAll} = state;\n  let [submenuLevel] = useState(UNSTABLE_expandedKeysStack?.length);\n  let isOpen = useMemo(() => UNSTABLE_expandedKeysStack[submenuLevel] === triggerKey, [UNSTABLE_expandedKeysStack, triggerKey, submenuLevel]);\n  let [focusStrategy, setFocusStrategy] = useState<FocusStrategy>(null);\n\n  let open = useCallback((focusStrategy: FocusStrategy = null) => {\n    setFocusStrategy(focusStrategy);\n    UNSTABLE_openSubmenu(triggerKey, submenuLevel);\n  }, [UNSTABLE_openSubmenu, submenuLevel, triggerKey]);\n\n  let close = useCallback(() => {\n    setFocusStrategy(null);\n    UNSTABLE_closeSubmenu(triggerKey, submenuLevel);\n  }, [UNSTABLE_closeSubmenu, submenuLevel, triggerKey]);\n\n  let toggle = useCallback((focusStrategy: FocusStrategy = null) => {\n    setFocusStrategy(focusStrategy);\n    if (isOpen) {\n      close();\n    } else {\n      open(focusStrategy);\n    }\n  }, [close, open, isOpen]);\n\n  return useMemo(() => ({\n    focusStrategy,\n    isOpen,\n    open,\n    close,\n    closeAll,\n    submenuLevel,\n    // TODO: Placeholders that aren't used but give us parity with OverlayTriggerState so we can use this in Popover. Refactor if we update Popover via\n    // https://github.com/adobe/react-spectrum/pull/4976#discussion_r1336472863\n    setOpen: () => {},\n    toggle\n  }), [isOpen, open, close, closeAll, focusStrategy, toggle, submenuLevel]);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}