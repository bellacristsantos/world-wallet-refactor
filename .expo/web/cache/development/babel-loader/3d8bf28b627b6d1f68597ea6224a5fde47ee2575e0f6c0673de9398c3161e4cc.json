{"ast":null,"code":"import React from \"react\";\nimport { Image, VStack, Text, Box, HStack, ScrollView, Pressable } from \"native-base\";\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar eventData = [{\n  image: require(\"../assets/lollapalooza.jpeg\"),\n  day: \"22\",\n  month: \"MAR\",\n  type: \"FESTIVAL\",\n  eventName: \"Lollapalooza\"\n}, {\n  image: require(\"../assets/summerbreeze.jpeg\"),\n  day: \"26\",\n  month: \"APR\",\n  type: \"CONCERT\",\n  eventName: \"Summer Breeze\"\n}];\nexport function EventsDisplay(_ref) {\n  var day = _ref.day,\n    month = _ref.month,\n    type = _ref.type,\n    eventName = _ref.eventName,\n    image = _ref.image,\n    _onPress = _ref.onPress;\n  var navigation = useNavigation();\n  return _jsx(ScrollView, {\n    horizontal: true,\n    showsHorizontalScrollIndicator: false,\n    children: eventData.map(function (event, index) {\n      return _jsx(Pressable, {\n        onPress: function onPress() {\n          _onPress == null ? void 0 : _onPress();\n          navigation.navigate('event_details');\n        },\n        children: _jsx(HStack, {\n          children: _jsx(VStack, {\n            margin: 2,\n            width: 250,\n            alignItems: \"center\",\n            mt: 4,\n            children: _jsxs(Box, {\n              position: \"relative\",\n              children: [_jsx(Image, {\n                source: event.image,\n                style: {\n                  height: 250,\n                  width: 250,\n                  borderRadius: 8,\n                  overflow: \"hidden\"\n                },\n                resizeMode: \"cover\",\n                alt: `Event Image ${index}`\n              }), _jsxs(Box, {\n                position: \"absolute\",\n                width: 60,\n                height: 60,\n                top: 2,\n                right: 2,\n                p: 2,\n                bg: \"rgba(255, 253, 253, 0.8)\",\n                borderRadius: 6,\n                alignItems: \"center\",\n                children: [_jsx(Text, {\n                  color: \"gray.700\",\n                  fontSize: \"lg\",\n                  fontWeight: \"bold\",\n                  children: event.day\n                }), _jsx(Text, {\n                  color: \"gray.700\",\n                  fontSize: \"xs\",\n                  children: event.month\n                })]\n              }), _jsxs(Box, {\n                position: \"absolute\",\n                bottom: 0,\n                left: 0,\n                p: 2,\n                width: \"100%\",\n                children: [_jsx(Text, {\n                  color: \"gray.200\",\n                  fontSize: \"sm\",\n                  textAlign: \"left\",\n                  children: event.type\n                }), _jsx(Text, {\n                  color: \"gray.100\",\n                  fontSize: \"lg\",\n                  textAlign: \"left\",\n                  fontWeight: \"bold\",\n                  children: event.eventName\n                })]\n              })]\n            })\n          })\n        }, index)\n      }, index);\n    })\n  });\n}","map":{"version":3,"names":["React","Image","VStack","Text","Box","HStack","ScrollView","Pressable","useNavigation","jsx","_jsx","jsxs","_jsxs","eventData","image","require","day","month","type","eventName","EventsDisplay","_ref","onPress","navigation","horizontal","showsHorizontalScrollIndicator","children","map","event","index","navigate","margin","width","alignItems","mt","position","source","style","height","borderRadius","overflow","resizeMode","alt","top","right","p","bg","color","fontSize","fontWeight","bottom","left","textAlign"],"sources":["/Users/bellacristsantos/Downloads/codeworks/luster/luster/src/components/EventsDisplay.tsx"],"sourcesContent":["import React from \"react\";\nimport { Image, VStack, Text, Box, HStack, ScrollView, Center, Pressable } from \"native-base\";\nimport { useNavigation } from '@react-navigation/native';\n\ntype EventData = {\n  image?: any;\n  day?: string;\n  month?: string;\n  type?: string;\n  eventName?: string;\n};\n\ntype Props = EventData & {\n  onPress?: () => void;\n};\n\nconst eventData: EventData[] = [\n  { image: require('@assets/lollapalooza.jpeg'), day: \"22\", month: \"MAR\", type: \"FESTIVAL\", eventName: \"Lollapalooza\" },\n  { image: require('@assets/summerbreeze.jpeg'), day: \"26\", month: \"APR\", type: \"CONCERT\", eventName: \"Summer Breeze\" },\n  // ... outros eventos\n];\n\nexport function EventsDisplay({ day, month, type, eventName, image, onPress }: Props) {\n  const navigation = useNavigation();\n\n  return (\n    <ScrollView horizontal showsHorizontalScrollIndicator={false}>\n      {eventData.map((event, index) => (\n        <Pressable\n          key={index}\n          onPress={() => {\n            onPress?.();\n            navigation.navigate('event_details');\n          }}\n        >\n          <HStack key={index}>\n            <VStack margin={2} width={250} alignItems=\"center\" mt={4}>\n              <Box position=\"relative\">\n                <Image\n                  source={event.image}\n                  style={{\n                    height: 250,\n                    width: 250,\n                    borderRadius: 8,\n                    overflow: \"hidden\",\n                  }}\n                  resizeMode=\"cover\"\n                  alt={`Event Image ${index}`}\n                />\n                <Box position=\"absolute\" width={60} height={60} top={2} right={2} p={2} bg=\"rgba(255, 253, 253, 0.8)\" borderRadius={6} alignItems='center'>\n                  <Text color=\"gray.700\" fontSize=\"lg\" fontWeight='bold'>{event.day}</Text>\n                  <Text color=\"gray.700\" fontSize=\"xs\">{event.month}</Text>\n                </Box>\n                <Box position=\"absolute\" bottom={0} left={0} p={2} width=\"100%\">\n                  <Text color=\"gray.200\" fontSize=\"sm\" textAlign=\"left\" >{event.type}</Text>\n                  <Text color=\"gray.100\" fontSize=\"lg\" textAlign=\"left\" fontWeight=\"bold\">{event.eventName}</Text>\n                </Box>\n              </Box>\n            </VStack>\n          </HStack>\n        </Pressable>\n      ))}\n    </ScrollView>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}