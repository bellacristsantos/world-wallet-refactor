{"ast":null,"code":"'use strict';\n\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nfunction _callSuper(_this, derived, args) {\n  function isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n    if (Reflect.construct.sham) return false;\n    if (typeof Proxy === \"function\") return true;\n    try {\n      return !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    } catch (e) {\n      return false;\n    }\n  }\n  derived = _getPrototypeOf(derived);\n  return _possibleConstructorReturn(_this, isNativeReflectConstruct() ? Reflect.construct(derived, args || [], _getPrototypeOf(_this).constructor) : derived.apply(_this, args));\n}\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport { AnimatedEvent } from \"../AnimatedEvent\";\nimport AnimatedNode from \"./AnimatedNode\";\nimport AnimatedStyle from \"./AnimatedStyle\";\nimport NativeAnimatedHelper from \"../NativeAnimatedHelper\";\nimport invariant from 'fbjs/lib/invariant';\nvar AnimatedProps = function (_AnimatedNode) {\n  _inherits(AnimatedProps, _AnimatedNode);\n  function AnimatedProps(props, callback) {\n    var _this;\n    _classCallCheck(this, AnimatedProps);\n    _this = _callSuper(this, AnimatedProps);\n    if (props.style) {\n      props = _objectSpread(_objectSpread({}, props), {}, {\n        style: new AnimatedStyle(props.style)\n      });\n    }\n    _this._props = props;\n    _this._callback = callback;\n    _this.__attach();\n    return _this;\n  }\n  _createClass(AnimatedProps, [{\n    key: \"__getValue\",\n    value: function __getValue() {\n      var props = {};\n      for (var key in this._props) {\n        var value = this._props[key];\n        if (value instanceof AnimatedNode) {\n          if (!value.__isNative || value instanceof AnimatedStyle) {\n            props[key] = value.__getValue();\n          }\n        } else if (value instanceof AnimatedEvent) {\n          props[key] = value.__getHandler();\n        } else {\n          props[key] = value;\n        }\n      }\n      return props;\n    }\n  }, {\n    key: \"__getAnimatedValue\",\n    value: function __getAnimatedValue() {\n      var props = {};\n      for (var key in this._props) {\n        var value = this._props[key];\n        if (value instanceof AnimatedNode) {\n          props[key] = value.__getAnimatedValue();\n        }\n      }\n      return props;\n    }\n  }, {\n    key: \"__attach\",\n    value: function __attach() {\n      for (var key in this._props) {\n        var value = this._props[key];\n        if (value instanceof AnimatedNode) {\n          value.__addChild(this);\n        }\n      }\n    }\n  }, {\n    key: \"__detach\",\n    value: function __detach() {\n      if (this.__isNative && this._animatedView) {\n        this.__disconnectAnimatedView();\n      }\n      for (var key in this._props) {\n        var value = this._props[key];\n        if (value instanceof AnimatedNode) {\n          value.__removeChild(this);\n        }\n      }\n      _get(_getPrototypeOf(AnimatedProps.prototype), \"__detach\", this).call(this);\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      this._callback();\n    }\n  }, {\n    key: \"__makeNative\",\n    value: function __makeNative() {\n      if (!this.__isNative) {\n        this.__isNative = true;\n        for (var key in this._props) {\n          var value = this._props[key];\n          if (value instanceof AnimatedNode) {\n            value.__makeNative();\n          }\n        }\n        if (this._animatedView) {\n          this.__connectAnimatedView();\n        }\n      }\n    }\n  }, {\n    key: \"setNativeView\",\n    value: function setNativeView(animatedView) {\n      if (this._animatedView === animatedView) {\n        return;\n      }\n      this._animatedView = animatedView;\n      if (this.__isNative) {\n        this.__connectAnimatedView();\n      }\n    }\n  }, {\n    key: \"__connectAnimatedView\",\n    value: function __connectAnimatedView() {\n      invariant(this.__isNative, 'Expected node to be marked as \"native\"');\n      var nativeViewTag = this._animatedView;\n      invariant(nativeViewTag != null, 'Unable to locate attached view in the native tree');\n      NativeAnimatedHelper.API.connectAnimatedNodeToView(this.__getNativeTag(), nativeViewTag);\n    }\n  }, {\n    key: \"__disconnectAnimatedView\",\n    value: function __disconnectAnimatedView() {\n      invariant(this.__isNative, 'Expected node to be marked as \"native\"');\n      var nativeViewTag = this._animatedView;\n      invariant(nativeViewTag != null, 'Unable to locate attached view in the native tree');\n      NativeAnimatedHelper.API.disconnectAnimatedNodeFromView(this.__getNativeTag(), nativeViewTag);\n    }\n  }, {\n    key: \"__restoreDefaultValues\",\n    value: function __restoreDefaultValues() {\n      if (this.__isNative) {\n        NativeAnimatedHelper.API.restoreDefaultValues(this.__getNativeTag());\n      }\n    }\n  }, {\n    key: \"__getNativeConfig\",\n    value: function __getNativeConfig() {\n      var propsConfig = {};\n      for (var propKey in this._props) {\n        var value = this._props[propKey];\n        if (value instanceof AnimatedNode) {\n          value.__makeNative();\n          propsConfig[propKey] = value.__getNativeTag();\n        }\n      }\n      return {\n        type: 'props',\n        props: propsConfig\n      };\n    }\n  }]);\n  return AnimatedProps;\n}(AnimatedNode);\nexport default AnimatedProps;","map":{"version":3,"names":["_classCallCheck","_createClass","_possibleConstructorReturn","_get","_getPrototypeOf","_inherits","_callSuper","_this","derived","args","isNativeReflectConstruct","Reflect","construct","sham","Proxy","Boolean","prototype","valueOf","call","e","constructor","apply","_objectSpread","AnimatedEvent","AnimatedNode","AnimatedStyle","NativeAnimatedHelper","invariant","AnimatedProps","_AnimatedNode","props","callback","style","_props","_callback","__attach","key","value","__getValue","__isNative","__getHandler","__getAnimatedValue","__addChild","__detach","_animatedView","__disconnectAnimatedView","__removeChild","update","__makeNative","__connectAnimatedView","setNativeView","animatedView","nativeViewTag","API","connectAnimatedNodeToView","__getNativeTag","disconnectAnimatedNodeFromView","__restoreDefaultValues","restoreDefaultValues","__getNativeConfig","propsConfig","propKey","type"],"sources":["/Users/bellacristsantos/Downloads/codeworks/luster/luster/node_modules/react-native-web/dist/vendor/react-native/Animated/nodes/AnimatedProps.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n\n'use strict';\n\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport { AnimatedEvent } from '../AnimatedEvent';\nimport AnimatedNode from './AnimatedNode';\nimport AnimatedStyle from './AnimatedStyle';\nimport NativeAnimatedHelper from '../NativeAnimatedHelper';\nimport invariant from 'fbjs/lib/invariant';\nclass AnimatedProps extends AnimatedNode {\n  constructor(props, callback) {\n    super();\n    if (props.style) {\n      props = _objectSpread(_objectSpread({}, props), {}, {\n        style: new AnimatedStyle(props.style)\n      });\n    }\n    this._props = props;\n    this._callback = callback;\n    this.__attach();\n  }\n  __getValue() {\n    var props = {};\n    for (var key in this._props) {\n      var value = this._props[key];\n      if (value instanceof AnimatedNode) {\n        if (!value.__isNative || value instanceof AnimatedStyle) {\n          // We cannot use value of natively driven nodes this way as the value we have access from\n          // JS may not be up to date.\n          props[key] = value.__getValue();\n        }\n      } else if (value instanceof AnimatedEvent) {\n        props[key] = value.__getHandler();\n      } else {\n        props[key] = value;\n      }\n    }\n    return props;\n  }\n  __getAnimatedValue() {\n    var props = {};\n    for (var key in this._props) {\n      var value = this._props[key];\n      if (value instanceof AnimatedNode) {\n        props[key] = value.__getAnimatedValue();\n      }\n    }\n    return props;\n  }\n  __attach() {\n    for (var key in this._props) {\n      var value = this._props[key];\n      if (value instanceof AnimatedNode) {\n        value.__addChild(this);\n      }\n    }\n  }\n  __detach() {\n    if (this.__isNative && this._animatedView) {\n      this.__disconnectAnimatedView();\n    }\n    for (var key in this._props) {\n      var value = this._props[key];\n      if (value instanceof AnimatedNode) {\n        value.__removeChild(this);\n      }\n    }\n    super.__detach();\n  }\n  update() {\n    this._callback();\n  }\n  __makeNative() {\n    if (!this.__isNative) {\n      this.__isNative = true;\n      for (var key in this._props) {\n        var value = this._props[key];\n        if (value instanceof AnimatedNode) {\n          value.__makeNative();\n        }\n      }\n      if (this._animatedView) {\n        this.__connectAnimatedView();\n      }\n    }\n  }\n  setNativeView(animatedView) {\n    if (this._animatedView === animatedView) {\n      return;\n    }\n    this._animatedView = animatedView;\n    if (this.__isNative) {\n      this.__connectAnimatedView();\n    }\n  }\n  __connectAnimatedView() {\n    invariant(this.__isNative, 'Expected node to be marked as \"native\"');\n    var nativeViewTag = this._animatedView;\n    invariant(nativeViewTag != null, 'Unable to locate attached view in the native tree');\n    NativeAnimatedHelper.API.connectAnimatedNodeToView(this.__getNativeTag(), nativeViewTag);\n  }\n  __disconnectAnimatedView() {\n    invariant(this.__isNative, 'Expected node to be marked as \"native\"');\n    var nativeViewTag = this._animatedView;\n    invariant(nativeViewTag != null, 'Unable to locate attached view in the native tree');\n    NativeAnimatedHelper.API.disconnectAnimatedNodeFromView(this.__getNativeTag(), nativeViewTag);\n  }\n  __restoreDefaultValues() {\n    // When using the native driver, view properties need to be restored to\n    // their default values manually since react no longer tracks them. This\n    // is needed to handle cases where a prop driven by native animated is removed\n    // after having been changed natively by an animation.\n    if (this.__isNative) {\n      NativeAnimatedHelper.API.restoreDefaultValues(this.__getNativeTag());\n    }\n  }\n  __getNativeConfig() {\n    var propsConfig = {};\n    for (var propKey in this._props) {\n      var value = this._props[propKey];\n      if (value instanceof AnimatedNode) {\n        value.__makeNative();\n        propsConfig[propKey] = value.__getNativeTag();\n      }\n    }\n    return {\n      type: 'props',\n      props: propsConfig\n    };\n  }\n}\nexport default AnimatedProps;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}