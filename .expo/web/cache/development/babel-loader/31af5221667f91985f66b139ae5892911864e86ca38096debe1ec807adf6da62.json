{"ast":null,"code":"import { useEffect as $2tWuM$useEffect } from \"react\";\nimport { setInteractionModality as $2tWuM$setInteractionModality } from \"@react-aria/interactions\";\nimport { useLayoutEffect as $2tWuM$useLayoutEffect, useEffectEvent as $2tWuM$useEffectEvent } from \"@react-aria/utils\";\nfunction $e93e671b31057976$export$b8473d3665f3a75a(props, state, ref) {\n  var validationBehavior = props.validationBehavior,\n    focus = props.focus;\n  (0, $2tWuM$useLayoutEffect)(function () {\n    if (validationBehavior === \"native\" && (ref === null || ref === void 0 ? void 0 : ref.current)) {\n      var errorMessage = state.realtimeValidation.isInvalid ? state.realtimeValidation.validationErrors.join(\" \") || \"Invalid value.\" : \"\";\n      ref.current.setCustomValidity(errorMessage);\n      if (!ref.current.hasAttribute(\"title\")) ref.current.title = \"\";\n      if (!state.realtimeValidation.isInvalid) state.updateValidation($e93e671b31057976$var$getNativeValidity(ref.current));\n    }\n  });\n  var onReset = (0, $2tWuM$useEffectEvent)(function () {\n    state.resetValidation();\n  });\n  var onInvalid = (0, $2tWuM$useEffectEvent)(function (e) {\n    var _ref_current;\n    if (!state.displayValidation.isInvalid) state.commitValidation();\n    var form = ref === null || ref === void 0 ? void 0 : (_ref_current = ref.current) === null || _ref_current === void 0 ? void 0 : _ref_current.form;\n    if (!e.defaultPrevented && ref && form && $e93e671b31057976$var$getFirstInvalidInput(form) === ref.current) {\n      var _ref_current1;\n      if (focus) focus();else (_ref_current1 = ref.current) === null || _ref_current1 === void 0 ? void 0 : _ref_current1.focus();\n      (0, $2tWuM$setInteractionModality)(\"keyboard\");\n    }\n    e.preventDefault();\n  });\n  var onChange = (0, $2tWuM$useEffectEvent)(function () {\n    state.commitValidation();\n  });\n  (0, $2tWuM$useEffect)(function () {\n    var input = ref === null || ref === void 0 ? void 0 : ref.current;\n    if (!input) return;\n    var form = input.form;\n    input.addEventListener(\"invalid\", onInvalid);\n    input.addEventListener(\"change\", onChange);\n    form === null || form === void 0 ? void 0 : form.addEventListener(\"reset\", onReset);\n    return function () {\n      input.removeEventListener(\"invalid\", onInvalid);\n      input.removeEventListener(\"change\", onChange);\n      form === null || form === void 0 ? void 0 : form.removeEventListener(\"reset\", onReset);\n    };\n  }, [ref, onInvalid, onChange, onReset, validationBehavior]);\n}\nfunction $e93e671b31057976$var$getValidity(input) {\n  var validity = input.validity;\n  return {\n    badInput: validity.badInput,\n    customError: validity.customError,\n    patternMismatch: validity.patternMismatch,\n    rangeOverflow: validity.rangeOverflow,\n    rangeUnderflow: validity.rangeUnderflow,\n    stepMismatch: validity.stepMismatch,\n    tooLong: validity.tooLong,\n    tooShort: validity.tooShort,\n    typeMismatch: validity.typeMismatch,\n    valueMissing: validity.valueMissing,\n    valid: validity.valid\n  };\n}\nfunction $e93e671b31057976$var$getNativeValidity(input) {\n  return {\n    isInvalid: !input.validity.valid,\n    validationDetails: $e93e671b31057976$var$getValidity(input),\n    validationErrors: input.validationMessage ? [input.validationMessage] : []\n  };\n}\nfunction $e93e671b31057976$var$getFirstInvalidInput(form) {\n  for (var i = 0; i < form.elements.length; i++) {\n    var element = form.elements[i];\n    if (!element.validity.valid) return element;\n  }\n  return null;\n}\nexport { $e93e671b31057976$export$b8473d3665f3a75a as useFormValidation };","map":{"version":3,"names":["$e93e671b31057976$export$b8473d3665f3a75a","props","state","ref","validationBehavior","focus","$2tWuM$useLayoutEffect","current","errorMessage","realtimeValidation","isInvalid","validationErrors","join","setCustomValidity","hasAttribute","title","updateValidation","$e93e671b31057976$var$getNativeValidity","onReset","$2tWuM$useEffectEvent","resetValidation","onInvalid","e","_ref_current","displayValidation","commitValidation","form","defaultPrevented","$e93e671b31057976$var$getFirstInvalidInput","_ref_current1","$2tWuM$setInteractionModality","preventDefault","onChange","$2tWuM$useEffect","input","addEventListener","removeEventListener","$e93e671b31057976$var$getValidity","validity","badInput","customError","patternMismatch","rangeOverflow","rangeUnderflow","stepMismatch","tooLong","tooShort","typeMismatch","valueMissing","valid","validationDetails","validationMessage","i","elements","length","element"],"sources":["/Users/bellacristsantos/Downloads/codeworks/luster/luster/node_modules/@react-aria/form/dist/packages/@react-aria/form/src/index.ts","/Users/bellacristsantos/Downloads/codeworks/luster/luster/node_modules/@react-aria/form/dist/packages/@react-aria/form/src/useFormValidation.ts"],"sourcesContent":["/*\n * Copyright 2023 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nexport {useFormValidation} from './useFormValidation';\n","/*\n * Copyright 2023 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {FormValidationState} from '@react-stately/form';\nimport {RefObject, useEffect} from 'react';\nimport {setInteractionModality} from '@react-aria/interactions';\nimport {useEffectEvent, useLayoutEffect} from '@react-aria/utils';\nimport {Validation, ValidationResult} from '@react-types/shared';\n\ntype ValidatableElement = HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement;\n\ninterface FormValidationProps<T> extends Validation<T> {\n  focus?: () => void\n}\n\nexport function useFormValidation<T>(props: FormValidationProps<T>, state: FormValidationState, ref: RefObject<ValidatableElement> | undefined) {\n  let {validationBehavior, focus} = props;\n\n  // This is a useLayoutEffect so that it runs before the useEffect in useFormValidationState, which commits the validation change.\n  useLayoutEffect(() => {\n    if (validationBehavior === 'native' && ref?.current) {\n      let errorMessage = state.realtimeValidation.isInvalid ? state.realtimeValidation.validationErrors.join(' ') || 'Invalid value.' : '';\n      ref.current.setCustomValidity(errorMessage);\n\n      // Prevent default tooltip for validation message.\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=605277\n      if (!ref.current.hasAttribute('title')) {\n        ref.current.title = '';\n      }\n\n      if (!state.realtimeValidation.isInvalid) {\n        state.updateValidation(getNativeValidity(ref.current));\n      }\n    }\n  });\n\n  let onReset = useEffectEvent(() => {\n    state.resetValidation();\n  });\n\n  let onInvalid = useEffectEvent((e: Event) => {\n    // Only commit validation if we are not already displaying one.\n    // This avoids clearing server errors that the user didn't actually fix.\n    if (!state.displayValidation.isInvalid) {\n      state.commitValidation();\n    }\n\n    // Auto focus the first invalid input in a form, unless the error already had its default prevented.\n    let form = ref?.current?.form;\n    if (!e.defaultPrevented && ref && form && getFirstInvalidInput(form) === ref.current) {\n      if (focus) {\n        focus();\n      } else {\n        ref.current?.focus();\n      }\n\n      // Always show focus ring.\n      setInteractionModality('keyboard');\n    }\n\n    // Prevent default browser error UI from appearing.\n    e.preventDefault();\n  });\n\n  let onChange = useEffectEvent(() => {\n    state.commitValidation();\n  });\n\n  useEffect(() => {\n    let input = ref?.current;\n    if (!input) {\n      return;\n    }\n\n    let form = input.form;\n    input.addEventListener('invalid', onInvalid);\n    input.addEventListener('change', onChange);\n    form?.addEventListener('reset', onReset);\n    return () => {\n      input!.removeEventListener('invalid', onInvalid);\n      input!.removeEventListener('change', onChange);\n      form?.removeEventListener('reset', onReset);\n    };\n  }, [ref, onInvalid, onChange, onReset, validationBehavior]);\n}\n\nfunction getValidity(input: ValidatableElement) {\n  // The native ValidityState object is live, meaning each property is a getter that returns the current state.\n  // We need to create a snapshot of the validity state at the time this function is called to avoid unpredictable React renders.\n  let validity = input.validity;\n  return {\n    badInput: validity.badInput,\n    customError: validity.customError,\n    patternMismatch: validity.patternMismatch,\n    rangeOverflow: validity.rangeOverflow,\n    rangeUnderflow: validity.rangeUnderflow,\n    stepMismatch: validity.stepMismatch,\n    tooLong: validity.tooLong,\n    tooShort: validity.tooShort,\n    typeMismatch: validity.typeMismatch,\n    valueMissing: validity.valueMissing,\n    valid: validity.valid\n  };\n}\n\nfunction getNativeValidity(input: ValidatableElement): ValidationResult {\n  return {\n    isInvalid: !input.validity.valid,\n    validationDetails: getValidity(input),\n    validationErrors: input.validationMessage ? [input.validationMessage] : []\n  };\n}\n\nfunction getFirstInvalidInput(form: HTMLFormElement): ValidatableElement | null {\n  for (let i = 0; i < form.elements.length; i++) {\n    let element = form.elements[i] as ValidatableElement;\n    if (!element.validity.valid) {\n      return element;\n    }\n  }\n\n  return null;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}