{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectDestructuringEmpty from \"@babel/runtime/helpers/objectDestructuringEmpty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useEffect, useState } from 'react';\nimport { Image, Text, Box, Pressable, HStack, ScrollView, Center } from \"native-base\";\nimport { useNavigation } from '@react-navigation/native';\nimport { getTopArtists } from \"../services/spotifyService\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function ArtistsFeed(_ref) {\n  var rest = Object.assign({}, (_objectDestructuringEmpty(_ref), _ref));\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    topArtists = _useState2[0],\n    setTopArtists = _useState2[1];\n  var navigation = useNavigation();\n  useEffect(function () {\n    var fetchData = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        try {\n          var artists = yield getTopArtists();\n          setTopArtists(artists);\n        } catch (error) {\n          console.error(error);\n        }\n      });\n      return function fetchData() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    fetchData();\n  }, []);\n  return _jsx(ScrollView, {\n    horizontal: true,\n    showsHorizontalScrollIndicator: false,\n    children: _jsx(HStack, {\n      children: topArtists.map(function (artist, index) {\n        return _jsx(Pressable, _objectSpread(_objectSpread({\n          margin: 2,\n          width: 20,\n          alignItems: \"center\",\n          onPress: function onPress() {\n            navigation.navigate('artists_list');\n          },\n          overflow: \"hidden\",\n          marginTop: 14\n        }, rest), {}, {\n          children: _jsxs(Box, {\n            mb: 2,\n            children: [_jsx(Image, {\n              source: {\n                uri: artist.image\n              },\n              style: {\n                height: 63,\n                width: 63,\n                borderRadius: 1000,\n                overflow: \"hidden\"\n              },\n              resizeMode: \"cover\",\n              alt: `Image for ${artist.name}`\n            }), _jsx(Center, {\n              children: _jsx(Text, {\n                color: \"gray.200\",\n                fontSize: \"xs\",\n                fontWeight: \"bold\",\n                textAlign: \"center\",\n                marginTop: 1,\n                children: artist.name\n              })\n            })]\n          })\n        }), index);\n      })\n    })\n  });\n}","map":{"version":3,"names":["React","useEffect","useState","Image","Text","Box","Pressable","HStack","ScrollView","Center","useNavigation","getTopArtists","jsx","_jsx","jsxs","_jsxs","ArtistsFeed","_ref","rest","Object","assign","_objectDestructuringEmpty","_useState","_useState2","_slicedToArray","topArtists","setTopArtists","navigation","fetchData","_ref2","_asyncToGenerator","artists","error","console","apply","arguments","horizontal","showsHorizontalScrollIndicator","children","map","artist","index","_objectSpread","margin","width","alignItems","onPress","navigate","overflow","marginTop","mb","source","uri","image","style","height","borderRadius","resizeMode","alt","name","color","fontSize","fontWeight","textAlign"],"sources":["/Users/bellacristsantos/Downloads/codeworks/luster/luster/src/components/ArtistsFeed.tsx"],"sourcesContent":["// ArtistsFeed.tsx\nimport React, { useEffect, useState } from 'react';\nimport { Image, VStack, Text, Box, Pressable, HStack, ScrollView, Center } from \"native-base\";\nimport { useNavigation } from '@react-navigation/native';\nimport { getTopArtists } from '@services/spotifyService';\n\n\nexport function ArtistsFeed({ ...rest }) {\n  const [topArtists, setTopArtists] = useState([]);\n  const navigation = useNavigation();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const artists = await getTopArtists();\n        setTopArtists(artists);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <ScrollView horizontal showsHorizontalScrollIndicator={false}>\n      <HStack>\n        {topArtists.map((artist, index) => (\n          <Pressable\n            key={index}\n            margin={2}\n            width={20}\n            alignItems='center'\n            onPress={() => {\n              navigation.navigate('artists_list');\n            }}\n            overflow=\"hidden\"\n            marginTop={14}\n            {...rest}\n          >\n            <Box mb={2}>\n              <Image\n                source={{ uri: artist.image }}\n                style={{\n                  height: 63,\n                  width: 63,\n                  borderRadius: 1000,\n                  overflow: \"hidden\",\n                }}\n                resizeMode=\"cover\"\n                alt={`Image for ${artist.name}`}\n              />\n              <Center>\n                <Text\n                  color=\"gray.200\"\n                  fontSize=\"xs\"\n                  fontWeight=\"bold\"\n                  textAlign=\"center\"\n                  marginTop={1}\n                >\n                  {artist.name}\n                </Text>\n              </Center>\n            </Box>\n          </Pressable>\n        ))}\n      </HStack>\n    </ScrollView>\n  );\n}\n"],"mappings":";;;;;;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,KAAK,EAAUC,IAAI,EAAEC,GAAG,EAAEC,SAAS,EAAEC,MAAM,EAAEC,UAAU,EAAEC,MAAM,QAAQ,aAAa;AAC7F,SAASC,aAAa,QAAQ,0BAA0B;AACxD,SAASC,aAAa;AAAmC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAGzD,OAAO,SAASC,WAAWA,CAAAC,IAAA,EAAc;EAAA,IAARC,IAAI,GAAAC,MAAA,CAAAC,MAAA,MAAAC,yBAAA,CAAAJ,IAAA,GAAAA,IAAA;EACnC,IAAAK,SAAA,GAAoCpB,QAAQ,CAAC,EAAE,CAAC;IAAAqB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAzCG,UAAU,GAAAF,UAAA;IAAEG,aAAa,GAAAH,UAAA;EAChC,IAAMI,UAAU,GAAGjB,aAAa,CAAC,CAAC;EAElCT,SAAS,CAAC,YAAM;IACd,IAAM2B,SAAS;MAAA,IAAAC,KAAA,GAAAC,iBAAA,CAAG,aAAY;QAC5B,IAAI;UACF,IAAMC,OAAO,SAASpB,aAAa,CAAC,CAAC;UACrCe,aAAa,CAACK,OAAO,CAAC;QACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;QACtB;MACF,CAAC;MAAA,gBAPKJ,SAASA,CAAA;QAAA,OAAAC,KAAA,CAAAK,KAAA,OAAAC,SAAA;MAAA;IAAA,GAOd;IAEDP,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,OACEf,IAAA,CAACL,UAAU;IAAC4B,UAAU;IAACC,8BAA8B,EAAE,KAAM;IAAAC,QAAA,EAC3DzB,IAAA,CAACN,MAAM;MAAA+B,QAAA,EACJb,UAAU,CAACc,GAAG,CAAC,UAACC,MAAM,EAAEC,KAAK;QAAA,OAC5B5B,IAAA,CAACP,SAAS,EAAAoC,aAAA,CAAAA,aAAA;UAERC,MAAM,EAAE,CAAE;UACVC,KAAK,EAAE,EAAG;UACVC,UAAU,EAAC,QAAQ;UACnBC,OAAO,EAAE,SAAAA,QAAA,EAAM;YACbnB,UAAU,CAACoB,QAAQ,CAAC,cAAc,CAAC;UACrC,CAAE;UACFC,QAAQ,EAAC,QAAQ;UACjBC,SAAS,EAAE;QAAG,GACV/B,IAAI;UAAAoB,QAAA,EAERvB,KAAA,CAACV,GAAG;YAAC6C,EAAE,EAAE,CAAE;YAAAZ,QAAA,GACTzB,IAAA,CAACV,KAAK;cACJgD,MAAM,EAAE;gBAAEC,GAAG,EAAEZ,MAAM,CAACa;cAAM,CAAE;cAC9BC,KAAK,EAAE;gBACLC,MAAM,EAAE,EAAE;gBACVX,KAAK,EAAE,EAAE;gBACTY,YAAY,EAAE,IAAI;gBAClBR,QAAQ,EAAE;cACZ,CAAE;cACFS,UAAU,EAAC,OAAO;cAClBC,GAAG,EAAG,aAAYlB,MAAM,CAACmB,IAAK;YAAE,CACjC,CAAC,EACF9C,IAAA,CAACJ,MAAM;cAAA6B,QAAA,EACLzB,IAAA,CAACT,IAAI;gBACHwD,KAAK,EAAC,UAAU;gBAChBC,QAAQ,EAAC,IAAI;gBACbC,UAAU,EAAC,MAAM;gBACjBC,SAAS,EAAC,QAAQ;gBAClBd,SAAS,EAAE,CAAE;gBAAAX,QAAA,EAEZE,MAAM,CAACmB;cAAI,CACR;YAAC,CACD,CAAC;UAAA,CACN;QAAC,IAlCDlB,KAmCI,CAAC;MAAA,CACb;IAAC,CACI;EAAC,CACC,CAAC;AAEjB"},"metadata":{},"sourceType":"module","externalDependencies":[]}