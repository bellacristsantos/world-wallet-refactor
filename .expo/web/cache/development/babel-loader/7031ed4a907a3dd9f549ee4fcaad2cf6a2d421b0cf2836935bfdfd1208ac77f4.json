{"ast":null,"code":"import _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nfunction _callSuper(_this, derived, args) {\n  function isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n    if (Reflect.construct.sham) return false;\n    if (typeof Proxy === \"function\") return true;\n    try {\n      return !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    } catch (e) {\n      return false;\n    }\n  }\n  derived = _getPrototypeOf(derived);\n  return _possibleConstructorReturn(_this, isNativeReflectConstruct() ? Reflect.construct(derived, args || [], _getPrototypeOf(_this).constructor) : derived.apply(_this, args));\n}\nimport Platform from \"../Platform\";\nimport { CodedError } from \"./CodedError\";\nexport var UnavailabilityError = function (_CodedError) {\n  _inherits(UnavailabilityError, _CodedError);\n  function UnavailabilityError(moduleName, propertyName) {\n    _classCallCheck(this, UnavailabilityError);\n    return _callSuper(this, UnavailabilityError, ['ERR_UNAVAILABLE', `The method or property ${moduleName}.${propertyName} is not available on ${Platform.OS}, are you sure you've linked all the native dependencies properly?`]);\n  }\n  return _createClass(UnavailabilityError);\n}(CodedError);","map":{"version":3,"names":["Platform","CodedError","UnavailabilityError","_CodedError","_inherits","moduleName","propertyName","_classCallCheck","_callSuper","OS","_createClass"],"sources":["/Users/bellacristsantos/Downloads/codeworks/luster/luster/node_modules/expo-modules-core/src/errors/UnavailabilityError.ts"],"sourcesContent":["import Platform from '../Platform';\nimport { CodedError } from './CodedError';\n\n/**\n * A class for errors to be thrown when a property is accessed which is\n * unavailable, unsupported, or not currently implemented on the running\n * platform.\n */\nexport class UnavailabilityError extends CodedError {\n  constructor(moduleName: string, propertyName: string) {\n    super(\n      'ERR_UNAVAILABLE',\n      `The method or property ${moduleName}.${propertyName} is not available on ${Platform.OS}, are you sure you've linked all the native dependencies properly?`\n    );\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAOA,QAAQ;AACf,SAASC,UAAU;AAOnB,WAAaC,mBAAoB,aAAAC,WAAA;EAAAC,SAAA,CAAAF,mBAAA,EAAAC,WAAA;EAC/B,SAAAD,oBAAYG,UAAkB,EAAEC,YAAoB;IAAAC,eAAA,OAAAL,mBAAA;IAAA,OAAAM,UAAA,OAAAN,mBAAA,GAEhD,iBAAiB,EACjB,0BAA0BG,UAAU,IAAIC,YAAY,wBAAwBN,QAAQ,CAACS,EAAE,oEAAoE;EAE/J;EAAC,OAAAC,YAAA,CAAAR,mBAAA;AAAA,EANsCD,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}