{"ast":null,"code":"import React from \"react\";\nimport { Image, VStack, Text, Box, HStack, ScrollView, Center } from \"native-base\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function EventsDisplay(_ref) {\n  var day = _ref.day,\n    month = _ref.month;\n  var eventData = [{\n    image: require(\"../assets/lollapalooza.jpeg\"),\n    day: \"22\",\n    month: \"MAR\"\n  }, {\n    image: require(\"../assets/summerbreeze.jpeg\"),\n    day: \"26\",\n    month: \"APR\"\n  }];\n  return _jsx(ScrollView, {\n    horizontal: true,\n    showsHorizontalScrollIndicator: false,\n    children: _jsx(HStack, {\n      children: eventData.map(function (event, index) {\n        return _jsxs(VStack, {\n          margin: 2,\n          width: 250,\n          alignItems: \"center\",\n          children: [_jsx(Box, {\n            mb: 2,\n            children: _jsx(Image, {\n              source: event.image,\n              style: {\n                height: 250,\n                width: 250,\n                borderRadius: 8,\n                overflow: \"hidden\"\n              },\n              resizeMode: \"cover\",\n              alt: `Event Image ${index}`\n            })\n          }), _jsxs(Center, {\n            children: [_jsx(Text, {\n              color: \"gray.200\",\n              fontSize: \"lg\",\n              fontWeight: \"bold\",\n              textAlign: \"center\",\n              marginTop: 1,\n              children: event.day\n            }), _jsx(Text, {\n              color: \"gray.500\",\n              fontSize: \"sm\",\n              textAlign: \"center\",\n              children: event.month\n            })]\n          })]\n        }, index);\n      })\n    })\n  });\n}","map":{"version":3,"names":["React","Image","VStack","Text","Box","HStack","ScrollView","Center","jsx","_jsx","jsxs","_jsxs","EventsDisplay","_ref","day","month","eventData","image","require","horizontal","showsHorizontalScrollIndicator","children","map","event","index","margin","width","alignItems","mb","source","style","height","borderRadius","overflow","resizeMode","alt","color","fontSize","fontWeight","textAlign","marginTop"],"sources":["/Users/bellacristsantos/Downloads/codeworks/luster/luster/src/components/EventsDisplay.tsx"],"sourcesContent":["import React from \"react\";\nimport { Image, VStack, Text, Box, HStack, ScrollView, Center } from \"native-base\";\n\ntype Props = {\n  day?: string;\n  month?: string;\n};\n\nexport function EventsDisplay({ day, month }: Props) {\n  const eventData = [\n    { image: require('@assets/lollapalooza.jpeg'), day: \"22\", month: \"MAR\" },\n    { image: require('@assets/summerbreeze.jpeg'), day: \"26\", month: \"APR\" },\n  ];\n\n  return (\n    <ScrollView horizontal showsHorizontalScrollIndicator={false}>\n      <HStack>\n        {eventData.map((event, index) => (\n          <VStack key={index} margin={2} width={250} alignItems=\"center\">\n            <Box mb={2}>\n              <Image\n                source={event.image}\n                style={{\n                  height: 250,\n                  width: 250,\n                  borderRadius: 8,\n                  overflow: \"hidden\",\n                }}\n                resizeMode=\"cover\"\n                alt={`Event Image ${index}`}\n              />\n            </Box>\n            <Center>\n              <Text color=\"gray.200\" fontSize=\"lg\" fontWeight=\"bold\" textAlign=\"center\" marginTop={1}>\n                {event.day}\n              </Text>\n              <Text color=\"gray.500\" fontSize=\"sm\" textAlign=\"center\">\n                {event.month}\n              </Text>\n            </Center>\n          </VStack>\n        ))}\n      </HStack>\n    </ScrollView>\n  );\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,EAAEC,MAAM,EAAEC,IAAI,EAAEC,GAAG,EAAEC,MAAM,EAAEC,UAAU,EAAEC,MAAM,QAAQ,aAAa;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAOnF,OAAO,SAASC,aAAaA,CAAAC,IAAA,EAAwB;EAAA,IAArBC,GAAG,GAAAD,IAAA,CAAHC,GAAG;IAAEC,KAAK,GAAAF,IAAA,CAALE,KAAK;EACxC,IAAMC,SAAS,GAAG,CAChB;IAAEC,KAAK,EAAEC,OAAO,8BAA4B,CAAC;IAAEJ,GAAG,EAAE,IAAI;IAAEC,KAAK,EAAE;EAAM,CAAC,EACxE;IAAEE,KAAK,EAAEC,OAAO,8BAA4B,CAAC;IAAEJ,GAAG,EAAE,IAAI;IAAEC,KAAK,EAAE;EAAM,CAAC,CACzE;EAED,OACEN,IAAA,CAACH,UAAU;IAACa,UAAU;IAACC,8BAA8B,EAAE,KAAM;IAAAC,QAAA,EAC3DZ,IAAA,CAACJ,MAAM;MAAAgB,QAAA,EACJL,SAAS,CAACM,GAAG,CAAC,UAACC,KAAK,EAAEC,KAAK;QAAA,OAC1Bb,KAAA,CAACT,MAAM;UAAauB,MAAM,EAAE,CAAE;UAACC,KAAK,EAAE,GAAI;UAACC,UAAU,EAAC,QAAQ;UAAAN,QAAA,GAC5DZ,IAAA,CAACL,GAAG;YAACwB,EAAE,EAAE,CAAE;YAAAP,QAAA,EACTZ,IAAA,CAACR,KAAK;cACJ4B,MAAM,EAAEN,KAAK,CAACN,KAAM;cACpBa,KAAK,EAAE;gBACLC,MAAM,EAAE,GAAG;gBACXL,KAAK,EAAE,GAAG;gBACVM,YAAY,EAAE,CAAC;gBACfC,QAAQ,EAAE;cACZ,CAAE;cACFC,UAAU,EAAC,OAAO;cAClBC,GAAG,EAAG,eAAcX,KAAM;YAAE,CAC7B;UAAC,CACC,CAAC,EACNb,KAAA,CAACJ,MAAM;YAAAc,QAAA,GACLZ,IAAA,CAACN,IAAI;cAACiC,KAAK,EAAC,UAAU;cAACC,QAAQ,EAAC,IAAI;cAACC,UAAU,EAAC,MAAM;cAACC,SAAS,EAAC,QAAQ;cAACC,SAAS,EAAE,CAAE;cAAAnB,QAAA,EACpFE,KAAK,CAACT;YAAG,CACN,CAAC,EACPL,IAAA,CAACN,IAAI;cAACiC,KAAK,EAAC,UAAU;cAACC,QAAQ,EAAC,IAAI;cAACE,SAAS,EAAC,QAAQ;cAAAlB,QAAA,EACpDE,KAAK,CAACR;YAAK,CACR,CAAC;UAAA,CACD,CAAC;QAAA,GArBES,KAsBL,CAAC;MAAA,CACV;IAAC,CACI;EAAC,CACC,CAAC;AAEjB"},"metadata":{},"sourceType":"module","externalDependencies":[]}